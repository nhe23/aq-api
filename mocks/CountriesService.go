// Code generated by mockery v2.4.0. DO NOT EDIT.

package mocks

import (
	model "github.com/nhe23/aq-api/graph/model"
	mock "github.com/stretchr/testify/mock"
)

// CountriesService is an autogenerated mock type for the CountriesService type
type CountriesService struct {
	mock.Mock
}

// GetCountries provides a mock function with given fields:
func (_m *CountriesService) GetCountries() ([]*model.Country, error) {
	ret := _m.Called()

	var r0 []*model.Country
	if rf, ok := ret.Get(0).(func() []*model.Country); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*model.Country)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCountry provides a mock function with given fields: countryCode
func (_m *CountriesService) GetCountry(countryCode string) (*model.Country, error) {
	ret := _m.Called(countryCode)

	var r0 *model.Country
	if rf, ok := ret.Get(0).(func(string) *model.Country); ok {
		r0 = rf(countryCode)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Country)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(countryCode)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCountryByCodes provides a mock function with given fields: countryCodes
func (_m *CountriesService) GetCountryByCodes(countryCodes []string) ([]*model.Country, error) {
	ret := _m.Called(countryCodes)

	var r0 []*model.Country
	if rf, ok := ret.Get(0).(func([]string) []*model.Country); ok {
		r0 = rf(countryCodes)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*model.Country)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(countryCodes)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
